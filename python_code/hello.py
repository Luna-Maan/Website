from browser import document

a = input()
a = a.replace("(","( ")
a = a.replace(")"," )")
a = str.split(a)
print(a)

operators = ["/", "*", "-", "+"]
parsed = []
stack = []
while len(a) > 0:
    if a[0] not in operators and a[0] != "(" and a[0] != ")":
        parsed.append(a.pop(0))
    elif a[0] in operators:
        while len(stack) > 0:
            if (a[0] in ["/","*"]) and (stack[-1] in ["/","*"]):
                parsed.append(stack.pop())
            elif (a[0] in ["+","-"]) and (stack[-1] != "("):
                parsed.append(stack.pop())
            else:
                break
        stack.append(a.pop(0))
    elif a[0] == "(":
        stack.append(a.pop(0))
    elif a[0] == ")":
        if len(stack) > 0:
            while stack[-1] != "(":
                parsed.append(stack.pop())
                if len(stack) == 0:
                    break
        stack.pop(-1)
        a.pop(0)

while len(stack) > 0:
    parsed.append(stack.pop())

x = []
i = 0
j = 0
temps = 0
while len(parsed)>1:
    j += 1
    print(parsed)
    print(j)
    print(x)
    if parsed[j] in operators:
        if parsed[j] == "*":
            if str(parsed[j-1]).startswith("temp"):
                x.insert(i,"mult " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-1]))
            elif str(parsed[j-2]).startswith("temp"):
                x.insert(i,"mult " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-2]))
            else:
                x.insert(i,"mult " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " temp" + str(temps))
                temps += 1
            parsed.insert(j+1,"temps" + str(temps-1))
            parsed.pop(j)
            parsed.pop(j-1)
            parsed.pop(j-2)
            j -= 3
            i += 2
        elif parsed[j] == "/":
            if str(parsed[j-1]).startswith("temp"):
                x.insert(i,"div " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-1]))
            elif str(parsed[j-2]).startswith("temp"):
                x.insert(i,"div " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-2]))
            else:
                x.insert(i,"div " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " temp" + str(temps))
                temps += 1
            i += 1
            parsed.insert(j+1,"temps" + str(temps-1))
            parsed.pop(j)
            parsed.pop(j-1)
            parsed.pop(j-2)
            j -= 3
        elif parsed[j] == "-":
            if str(parsed[j-1]).startswith("temp"):
                x.insert(i,"sub " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-1]))
            elif str(parsed[j-2]).startswith("temp"):
                x.insert(i,"sub " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-2]))
            else:
                x.insert(i,"sub " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " temp" + str(temps))
                temps += 1
            i += 1
            parsed.insert(j+1,"temps" + str(temps-1))
            parsed.pop(j)
            parsed.pop(j-1)
            parsed.pop(j-2)
            j -= 3
        elif parsed[j] == "+":
            if str(parsed[j-1]).startswith("temp"):
                x.insert(i,"add " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-1]))
            elif str(parsed[j-2]).startswith("temp"):
                x.insert(i,"add " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " " + str(parsed[j-2]))
            else:
                x.insert(i,"add " + str(parsed[j-2]) + " " + str(parsed[j-1]) + " temp" + str(temps))
                temps += 1
            i += 1
            parsed.insert(j+1,"temps" + str(temps-1))
            parsed.pop(j)
            parsed.pop(j-1)
            parsed.pop(j-2)
            j -= 3

print(a)
print(parsed)
print(x)

document["python"].textContent = "This text is generated by Python code.\nInscructions in RASM: " + str(x) + "\nUsed temporary variables: " + str(parsed)